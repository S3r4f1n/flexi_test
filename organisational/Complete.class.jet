{"diagram":"ClassDiagram","nodes":[{"methods":"","name":"M: User\nPackage: GlobalModels","x":390,"y":275,"attributes":"","id":37,"type":"ClassNode"},{"name":"Since many components work with\nthese types they are defined here.","x":1100,"y":540,"id":0,"type":"NoteNode"},{"methods":"createUser(User)\nloginUser(User, String)\nupdatePassword(User, String, String)\nupdateName(User, String)\naddComment(User, Comment)\nremoveComment(User, Comment)\nupdateGameHistory(User, bool)\n\nSearchUser(String): List<User>\nviewUser(User): UserDataView","name":"C: UserManager","x":1000,"y":121,"attributes":"Static","id":15,"type":"ClassNode"},{"name":"DTO follow REST API \nJSON format","x":60,"y":370,"id":16,"type":"NoteNode"},{"methods":"","name":"M: SetupData","x":420,"y":1122,"attributes":"players: List<Pair<User, int>>\nsmallBlind: int\nbigBlind: int\ninfoFirstRound: bool\n","id":31,"type":"ClassNode"},{"methods":"create(UserData):\nsave(UserData):\ngetById(long): UserData\ngetByName(String): UserData","name":"Repository - (JPA)","x":1610,"y":320,"attributes":"","id":1,"type":"ClassNode"},{"methods":"getUser(): User","name":"M: UserData\nProtected","x":1310,"y":261,"attributes":"repositoryId: long\ntoken: long\nname: String\ncreationDate: Date\nupdateDate: Date\npassword: String\ngameHistory: GameHistory\nsavedComments: List<Comment, Date>","id":13,"type":"ClassNode"},{"methods":"","name":"M: VideoSequence","x":450,"y":1473,"attributes":"Depends on Client","id":30,"type":"ClassNode"},{"methods":"","name":"C: DTOMapper\n","x":330,"y":181,"attributes":"","id":35,"type":"ClassNode"},{"methods":"","name":"M: Comment\nPakage: GlobalModels","x":1220,"y":1254,"attributes":"","id":25,"type":"ClassNode"},{"methods":"addObserver(GameObserver)\nremoveObserver(GameObserver)\ngetters...\nsetters which inform observer","name":"M: PlayerData\nProtected","x":840,"y":1114,"attributes":"playerId: User\nplayerScore: Integer\nplayerHand: Hand\nplayerDesicions: Desicion","id":26,"type":"ClassNode"},{"methods":"","name":"M: Comment","x":1090,"y":590,"attributes":"commentId: long\nAuthor: String\ncontent: String\nlikes: int\ndate: Date","id":2,"type":"ClassNode"},{"methods":"videoSetPlaylist(URL):\nvideoSetQuery(String):\nvideoSetLanguage(Language):\nvideoSetMinimalViewCount(int):\n\ngetVideoAndHands(): Pair<VideoData, List<Hand>>","name":"C: YTAPIManager","x":1480,"y":880,"attributes":"","id":10,"type":"ClassNode"},{"methods":"","name":"M: User\nPackage: GlobalModels","x":1210,"y":1344,"attributes":"","id":27,"type":"ClassNode"},{"methods":"","name":"M: VideoData","x":410,"y":1293,"attributes":"views: int\nthumbnail: Picture\nlikes: int\ntitle: String\ndescription: String\nvideoSequence: VideoSequence","id":29,"type":"ClassNode"},{"methods":"","name":"M: GameHistory","x":1060,"y":391,"attributes":"gamesPlayed: int\ngamesWon: int","id":14,"type":"ClassNode"},{"methods":"","name":"M: Correctness - Enum","x":1100,"y":1114,"attributes":"Values:\nCORRECT,\nFALSE,\nNOT_REVEALED,","id":24,"type":"ClassNode"},{"name":"YTAPIManager should take care of selection of Video and Comments\nSearching, Fetching and if needed do filtering.\nInternal structur is dependent on YT API","x":1480,"y":760,"id":3,"type":"NoteNode"},{"methods":"getRaiseValue(): int","name":"M: Desicion - Enum","x":890,"y":875,"attributes":"Values:\nCALL,\nRAISE(int),\nFOLD,\n----------\nraseValue: int","id":21,"type":"ClassNode"},{"methods":"joinGame(long):\ncreateGame(): long\ngetVideoData(long): VideoData\ngetPlayers(long): List<User>","name":"C: GameTrafficManager\nProtected","x":570,"y":370,"attributes":"request -> game\ntakes care of correct connection.\ne.g., an action of a player ends up\nin the right game","id":43,"type":"ClassNode"},{"methods":"","name":"M: GamePhase - Enum","x":690,"y":875,"attributes":"values:\nWAITING_FOR_PLAYERS,\nFIRST_ROUND, \nSECOND_ROUND, \nTHIRD_ROUND, \nFOURTH_ROUND,\nEND_ALL_FOLDED, \nEND_AFTER_LAST_ROUND,","id":20,"type":"ClassNode"},{"methods":"addObserver(GameObserver)\nremoveObserver(GameObserver)\ngetters...\nsetters which inform observer\n","name":"M: GameModel\nProtected","x":620,"y":1105,"attributes":"gameId: long\nplayers: List<PlayerData>\nvideo: VideoData\ngamePhase: GamePhase\ncurrentPlayer: PlayerData\nobservers: list<GameObservers>","id":23,"type":"ClassNode"},{"methods":"","name":"YT API","x":1840,"y":980,"attributes":"","id":4,"type":"ClassNode"},{"methods":"getters which do shallow copy if needed","name":"V: UserDataView - Interface","x":1260,"y":131,"attributes":"","id":12,"type":"ClassNode"},{"methods":"","name":"V: ClientInfromer\nimplements GameObserver","x":260,"y":690,"attributes":"activePlayer: List<ClientConnection>","id":40,"type":"ClassNode"},{"children":[20,21,22,23,24,25,26,27,28,29,30,31,32,33],"name":"Game","x":280,"y":830,"id":19,"type":"PackageNode"},{"methods":"","name":"Client (React)","x":10,"y":450,"attributes":"","id":17,"type":"ClassNode"},{"methods":"","name":"M: VideoDataDTO","x":220,"y":351,"attributes":"","id":39,"type":"ClassNode"},{"methods":"playerScoreChange(User, int):\npotScoreChange(int):\ncurrentPlayerChange(User):\nplayerDesicionChange(User, Desicion):\ngamePhaseChange(GamePhase):\nwinnerIs(User):\ngameGettingClosed():\nhandEvaluated(User, Hand):\nnewHand(User, Hand)","name":"V: GameObserver - interface","x":420,"y":874,"attributes":"","id":33,"type":"ClassNode"},{"children":[35,36,37,38,39,40,41,42,43,44],"name":"APIGateway - Component","x":268,"y":408,"id":34,"type":"PackageNode"},{"methods":"","name":"M: User","x":1200,"y":590,"attributes":"activeId: long\nname: String\nloggedIn: bool","id":5,"type":"ClassNode"},{"methods":"","name":"M: VideoData\nPackage: GameManager","x":390,"y":354,"attributes":"","id":38,"type":"ClassNode"},{"methods":"getGameById(long): Game\nclearClosedGames():\ngetClientInformerListByGameId(long): List<ClientInformer> mutable!!!\nopenGame(): long","name":"M: ActiveGames\nSingelton\nProtected","x":520,"y":620,"attributes":"gameStack: List<pair<Game, List <ClientInformer>>>","id":44,"type":"ClassNode"},{"name":"Following the concept of Model View Controller (MVC).\nEach class starts with M:, V:, C: depending on what the main\nfunctionality is.\n\nAll public classes are immutable.\nMutable classes are accessable throug controller classes.","x":430,"y":30,"id":18,"type":"NoteNode"},{"x":1640,"y":870,"id":6,"type":"PointNode"},{"methods":"videoSetPlaylist(URL):\nvideoSetQuery(String):\nvideoSetLanguage(Language):\nvideoSetMinimalViewCount(int):","name":"C: VideoSelection","x":220,"y":1343,"attributes":"","id":28,"type":"ClassNode"},{"methods":"","name":"V: ClientConnection\nRest API","x":270,"y":530,"attributes":"user: User\nsocket: Socket","id":42,"type":"ClassNode"},{"methods":"","name":"M: UserDTO's\n","x":220,"y":277,"attributes":"","id":36,"type":"ClassNode"},{"name":"Each Game instance represents a\ntable with several players.","x":1020,"y":800,"id":7,"type":"NoteNode"},{"methods":"","name":"C: HTTPEndpoint\nRest API","x":300,"y":440,"attributes":"Static","id":41,"type":"ClassNode"},{"children":[12,13,14,15],"name":"UserManager","x":1050,"y":75,"id":11,"type":"PackageNode"},{"methods":"","name":"M: Hand","x":1100,"y":975,"attributes":"comments: List<Pair<Comment, Correctnes>>","id":22,"type":"ClassNode"},{"methods":"game(): Game\njoinGame(User): User\nleaveGame(User):\nsetSmallBlind(int):\nsetBigBlind(int):\nsetStartScoreAll(int):\nsetStartScorePlayer(User, int):\ninfoFirstRound(bool):\nstart():\n\ncall(User):\nraise(User):\nfold(User):\n\naddObserver(GameObserver):\n\ngetGameId(): long\ngetVideoData(): VideoData\ngetGamePhase(): GamePhase\ngetPlayer(): List<User>","name":"C: Game","x":210,"y":870,"attributes":"private gameModel: GameModel\nvideoSelection: VideoSelection","id":32,"type":"ClassNode"},{"children":[9,10],"name":"YTAPIManager","x":1530,"y":865,"id":8,"type":"PackageNode"},{"methods":"","name":"M: Language - Enum","x":1560,"y":1050,"attributes":"Values:\nENGLISH,\nGERMAN,\nCHINESE,","id":9,"type":"ClassNode"}],"edges":[{"middleLabel":"","start":17,"directionality":"Unidirectional","end":41,"type":"DependencyEdge"},{"middleLabel":"","start":35,"directionality":"Unidirectional","end":36,"type":"DependencyEdge"},{"middleLabel":"","start":35,"directionality":"Unidirectional","end":37,"type":"DependencyEdge"},{"startLabel":"","middleLabel":"","start":36,"directionality":"Unspecified","end":37,"endLabel":"","type":"AssociationEdge"},{"startLabel":"","middleLabel":"","start":39,"directionality":"Unspecified","end":38,"endLabel":"","type":"AssociationEdge"},{"middleLabel":"","start":17,"directionality":"Bidirectional","end":42,"type":"DependencyEdge"},{"middleLabel":"","start":43,"directionality":"Unidirectional","end":44,"type":"DependencyEdge"},{"middleLabel":"","start":41,"directionality":"Unidirectional","end":43,"type":"DependencyEdge"},{"startLabel":"","middleLabel":"","start":13,"end":14,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":1,"end":13,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"Generalization Type":"Implementation","start":13,"end":12,"type":"GeneralizationEdge"},{"middleLabel":"","start":15,"directionality":"Unidirectional","end":12,"type":"DependencyEdge"},{"middleLabel":"","start":41,"directionality":"Unidirectional","end":11,"type":"DependencyEdge"},{"startLabel":"","middleLabel":"","start":23,"end":20,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"middleLabel":"","start":33,"directionality":"Unidirectional","end":20,"type":"DependencyEdge"},{"startLabel":"","middleLabel":"","start":23,"end":33,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"middleLabel":"","start":32,"directionality":"Unidirectional","end":23,"type":"DependencyEdge"},{"startLabel":"","middleLabel":"","start":26,"end":21,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":23,"end":26,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":26,"end":22,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":22,"end":24,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":22,"end":25,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":26,"end":27,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":32,"end":28,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":29,"end":30,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":23,"end":29,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":32,"end":29,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"middleLabel":"","start":32,"directionality":"Unidirectional","end":31,"type":"DependencyEdge"},{"middleLabel":"","start":44,"directionality":"Unidirectional","end":19,"type":"DependencyEdge"},{"middleLabel":"","start":8,"directionality":"Unidirectional","end":4,"type":"DependencyEdge"},{"middleLabel":"","start":10,"directionality":"Unidirectional","end":9,"type":"DependencyEdge"},{"start":3,"end":6,"type":"NoteEdge"},{"middleLabel":"","start":19,"directionality":"Bidirectional","end":10,"type":"DependencyEdge"},{"startLabel":"","middleLabel":"","start":44,"end":40,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"Generalization Type":"Implementation","start":40,"end":33,"type":"GeneralizationEdge"},{"startLabel":"","middleLabel":"","start":40,"end":42,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"}],"version":"3.4"}
